package com.employee.management.dao;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.Collections;
import java.util.Iterator;
import java.util.List;

import com.employee.management.system.vo.EmployeeVO;

public class EmployeeDAO {

	private Connection getConnection() {
		Connection connection = null;
		try {
			Class.forName("com.mysql.jdbc.Driver");
			connection = DriverManager.getConnection("jdbc:mysql://localhost:3306/emp_details", "root",
					"motherslove@999");
			System.out.println("Established a DB connection");
		} catch (Exception e) {
			System.out.println("Exception caught : " + e.getMessage());
		}
		return connection;
	}

	public void insertEmployeeDetails(List<EmployeeVO> empList) {

		try {
			System.out.println(empList.size());
			final String INSERT_EMPLOYEE = "INSERT INTO emp_details "
					+ "(emp_id, emp_first_name, emp_last_name, emp_age, emp_salary, emp_designation ) "
					+ "VALUES (?,?,?,?,?,?)";
			PreparedStatement preparedStatement = getConnection().prepareStatement(INSERT_EMPLOYEE);
			Iterator<EmployeeVO> it = empList.iterator();
			while (it.hasNext()) {
				EmployeeVO empVO = it.next();
				preparedStatement.setInt(1, empVO.getEmpID());
				preparedStatement.setString(2, empVO.getEmpFirstName());
				preparedStatement.setString(3, empVO.getEmpLastName());
				preparedStatement.setString(4, String.valueOf(empVO.getEmpAge()));
				preparedStatement.setString(5, String.valueOf(empVO.getEmpSalary()));
				preparedStatement.setString(6, String.valueOf(empVO.getEmpDesignation()));
				int row = preparedStatement.executeUpdate();
				if (row>1) {
					System.out.println("Employee details are saved successfully..");
				}
			}

		} catch (Exception e) {
			System.out.println("DB Exception" + e.getMessage());
		} finally {

		}
	}

	public void readAllEmployeeDetails() {
		try {
			EmployeeVO empVO;
			List<EmployeeVO> empVOList = new ArrayList<EmployeeVO>();
			final String READ_EMPLOYEES = "SELECT * FROM EMP_DETAILS ORDER BY EMP_SALARY";
			Statement stmt = getConnection().createStatement();
			ResultSet rs = stmt.executeQuery(READ_EMPLOYEES);
			while (rs.next()) {
				empVO = new EmployeeVO();
				empVO.setEmpID(rs.getInt("emp_id"));
				empVO.setEmpFirstName(rs.getString("emp_first_name"));
				empVO.setEmpLastName(rs.getString("emp_last_name"));
				empVO.setEmpAge(Integer.valueOf(rs.getString("emp_age")));
				empVO.setEmpSalary(Integer.valueOf(rs.getString("emp_salary")));
				empVO.setEmpDesignation(rs.getString("emp_designation"));
				empVOList.add(empVO);
			}

			Collections.sort(empVOList);
			Iterator<EmployeeVO> it = empVOList.iterator();
			while (it.hasNext()) {
				EmployeeVO empVODisp = it.next();
				System.out.println("Employee ID               :" +empVODisp.getEmpID());
				System.out.println("Employee First Name       :" +empVODisp.getEmpFirstName());
				System.out.println("Employee Last Name        :" +empVODisp.getEmpLastName());
				System.out.println("Employee Age              :" +empVODisp.getEmpAge());
				System.out.println("Employee Salary           :" +empVODisp.getEmpSalary());
				System.out.println("Employee Designation      :" +empVODisp.getEmpDesignation());
				
				System.out.println("----------------------------------------------------------");
			}

		} catch (Exception e) {
			System.out.println("Exception occured in Employee DAO" + e.getMessage());
		} finally {

		}
	}
	
	public void deleteEmployee(String empID) {
		try {
			final String DELETE_EMPLOYEE = "DELETE FROM EMP_DETAILS WHERE EMP_ID="+empID;
			Statement stmt = getConnection().createStatement();
			int count = stmt.executeUpdate(DELETE_EMPLOYEE);
			if (count>0) {
				System.out.println("Employee "+empID+" details are deleted successfully");
			}
			else {
				System.out.println("Employee record for ID "+empID+" is not found");
			}
		} catch (Exception e) {
			System.out.println("Exception occured in Employee DAO" + e.getMessage());
		}
		finally {
		}
	}

	
}
